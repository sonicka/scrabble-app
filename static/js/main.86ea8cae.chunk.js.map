{"version":3,"sources":["constants.js","reducers/wonGameReducer.js","reducers/isLoadingReducer.js","store.js","reducers/usersByScoreReducer.js","reducers/usersByWinsReducer.js","reducers/userReducer.js","reducers/activeTabReducer.js","reducers/shouldLoadUsersReducer.js","components/UserStats.jsx","leaderboard/components/UserItem.jsx","leaderboard/components/Tab.jsx","leaderboard/components/Spinner.jsx","api/fetch.js","actions.js","leaderboard/LeaderBoard.jsx","user-popup/components/TextField.jsx","user-popup/components/Button.jsx","user-popup/components/UserDetailsSection.jsx","user-popup/components/HighestScoreSection.jsx","user-popup/components/WonGamesSection.jsx","user-popup/UserPopup.jsx","App.js","index.js"],"names":["BASE_URL","LEADER_BOARD_URL","USERS_URL","GAMES_URL","SAVE_USERS_BY_WINS","SAVE_USERS_BY_SCORE","SAVE_USER","CLEAR_USER","SET_ACTIVE_TAB","SET_SHOULD_LOAD_USERS","SET_GAME","RESET_WON_GAME","SET_GAME_INDEX","SET_LAST_INDEX","SET_IS_LOADING","MOST_WINS_TAB","AVG_SCORE_TAB","USERS_BY_WINS","USERS_BY_SCORE","PREV","initialState","game","gameIndex","lastIndex","rootReducer","combineReducers","usersByScore","state","action","type","payload","users","usersByWins","user","activeTab","shouldLoadUsers","wonGame","isLoading","key","store","createStore","composeWithDevTools","applyMiddleware","thunk","UserStats","wins","averageScore","losses","customClass","className","UserItem","name","onClick","role","Tab","isActive","text","Spinner","getLeaderBoardByWins","a","fetch","response","ok","json","responseJson","console","error","getLeaderBoardByAvgScore","getUserById","userId","updateUser","username","email","method","headers","body","JSON","stringify","Error","getBestGame","playerId","score","length","find","scores","findIndex","sc","memberId","getGamesWonByUser","get","setShouldLoadUsers","isUpdated","dispatch","mapDispatchToProps","setActiveTab","saveUser","connect","saveUserWithGameDetails","highestScore","against","bestGameResponse","opponent","bestGame","opponentName","opponentId","id","won","winnerId","date","createdAt","switchTab","tab","map","TextField","isEditing","originalValue","handleChange","useState","value","setValue","isValid","setIsValid","useEffect","onChange","event","target","Button","disabled","nameFromState","userNameFromState","emailFromState","checkFormValidity","setIsEditing","setName","setUsername","setEmail","isFormValid","setIsFormValid","editForm","saveForm","resetFields","cancelEditing","HighestScoreSection","WonGamesSection","fetchGameWonByUser","playerScore","opponentScore","Date","toLocaleString","setGame","setGameIndex","setLastIndex","hideUserDetail","fetchWonGame","direction","nextIndex","newGame","saveUsersByWins","saveUsersByScore","clearUser","resetWonGame","setIsLoading","detailShown","loadUsersByWins","loadUsersByScore","fetchLeaderBoard","updatedUsers","getUserDetails","updatedUser","push","userDetails","userWithDetails","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86ea8cae.chunk.js","sourcesContent":["export const BASE_URL = \"http://localhost:3000\";\nexport const LEADER_BOARD_URL = `${BASE_URL}/leaderBoard`;\nexport const USERS_URL = `${BASE_URL}/users`;\nexport const GAMES_URL = `${BASE_URL}/games`;\n\nexport const SAVE_USERS_BY_WINS = \"SAVE_USERS_BY_WINS\";\nexport const SAVE_USERS_BY_SCORE = \"SAVE_USERS_BY_SCORE\";\nexport const SAVE_USER = \"SAVE_USER\";\nexport const CLEAR_USER = \"CLEAR_USER\";\nexport const SET_ACTIVE_TAB = \"SET_ACTIVE_TAB\";\nexport const SET_SHOULD_LOAD_USERS = \"SET_SHOULD_LOAD_USERS\";\nexport const SET_GAME = \"SET_GAME\";\nexport const RESET_WON_GAME = \"RESET_WON_GAME\";\nexport const SET_GAME_INDEX = \"SET_GAME_INDEX\";\nexport const SET_LAST_INDEX = \"SET_LAST_INDEX\";\nexport const SET_IS_LOADING = \"SET_IS_LOADING\";\n\nexport const MOST_WINS_TAB = \"most-wins-tab\";\nexport const AVG_SCORE_TAB = \"avg-score-tab\";\n\nexport const USERS_BY_WINS = \"users-by-most-wins\";\nexport const USERS_BY_SCORE = \"users-by-score\";\n\nexport const PREV = \"prev\";\nexport const NEXT = \"next\";\n","import {\n  SET_GAME,\n  SET_GAME_INDEX,\n  SET_LAST_INDEX,\n  RESET_WON_GAME,\n} from \"../constants\";\n\nconst initialState = {\n  game: null,\n  gameIndex: 1,\n  lastIndex: 5,\n};\n\nexport const wonGameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_GAME:\n      return { ...state, game: action.payload.game };\n    case SET_GAME_INDEX:\n      return { ...state, gameIndex: action.payload.gameIndex };\n    case SET_LAST_INDEX:\n      return { ...state, lastIndex: action.payload.lastIndex };\n    case RESET_WON_GAME:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { SET_IS_LOADING, USERS_BY_WINS, USERS_BY_SCORE } from \"../constants\";\n\nconst initialState = {\n  [USERS_BY_WINS]: false,\n  [USERS_BY_SCORE]: false,\n};\n\nexport const isLoadingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_IS_LOADING:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.isLoading,\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { usersByScoreReducer } from \"./reducers/usersByScoreReducer\";\nimport { usersByWinsReducer } from \"./reducers/usersByWinsReducer\";\nimport { userReducer } from \"./reducers/userReducer\";\nimport { activeTabReducer } from \"./reducers/activeTabReducer\";\nimport { shouldLoadUsersReducer } from \"./reducers/shouldLoadUsersReducer\";\nimport { wonGameReducer } from \"./reducers/wonGameReducer\";\nimport { isLoadingReducer } from \"./reducers/isLoadingReducer\";\n\nexport const rootReducer = combineReducers({\n  usersByScore: usersByScoreReducer,\n  usersByWins: usersByWinsReducer,\n  user: userReducer,\n  activeTab: activeTabReducer,\n  shouldLoadUsers: shouldLoadUsersReducer,\n  wonGame: wonGameReducer,\n  isLoading: isLoadingReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import { SAVE_USERS_BY_SCORE } from \"../constants\";\n\nexport const usersByScoreReducer = (state = [], action) => {\n  switch (action.type) {\n    case SAVE_USERS_BY_SCORE:\n      return action.payload.users;\n    default:\n      return state;\n  }\n};\n","import { SAVE_USERS_BY_WINS } from \"../constants\";\n\nexport const usersByWinsReducer = (state = [], action) => {\n  switch (action.type) {\n    case SAVE_USERS_BY_WINS:\n      return action.payload.users;\n    default:\n      return state;\n  }\n};\n","import { SAVE_USER, CLEAR_USER } from \"../constants\";\n\nexport const userReducer = (state = null, action) => {\n  switch (action.type) {\n    case SAVE_USER:\n      return {\n        ...state,\n        ...action.payload.user,\n      };\n    case CLEAR_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n","import { SET_ACTIVE_TAB, MOST_WINS_TAB } from \"../constants\";\n\nexport const activeTabReducer = (state = MOST_WINS_TAB, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_TAB:\n      return action.payload.activeTab;\n    default:\n      return state;\n  }\n};\n","import { SET_SHOULD_LOAD_USERS } from \"../constants\";\n\nexport const shouldLoadUsersReducer = (state = true, action) => {\n  switch (action.type) {\n    case SET_SHOULD_LOAD_USERS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import React from 'react';\n\nconst UserStats = ({ wins, averageScore, losses, customClass }) => {\n  return (\n    <div className={customClass}>\n      <div>{wins} wins</div>\n      <div>|</div>\n      <div>{averageScore} avg score</div>\n      <div>|</div>\n      <div>{losses} losses</div>\n    </div>\n  )\n}\n\nexport default UserStats;\n","\n\nimport React from 'react';\nimport UserStats from '../../components/UserStats';\nimport './UserItem.css';\n\nconst UserItem = ({ name, wins, averageScore, losses, onClick }) => {\n  return (\n    <div className='user-item-wrap' onClick={onClick} role='button'>\n        <div className='user-item-name'>{name}</div>\n        <UserStats \n          wins={wins} \n          averageScore={averageScore} \n          losses={losses} \n          customClass='user-item-stats'\n        />\n    </div>\n  )\n}\n\nexport default UserItem;\n","\n\nimport React from 'react';\nimport './Tab.css';\n\nconst Tab = ({ isActive, onClick, text }) => {\n  return (\n    <div \n      className={`leader-board-tab ${isActive ? 'active' : ''}`}\n      onClick={onClick}\n      role='button'>\n        {text}\n    </div>\n  )\n}\n\nexport default Tab;\n","\n\nimport React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"cube1\"></div>\n    <div className=\"cube2\"></div>\n  </div>  \n)\n\nexport default Spinner;\n","import { LEADER_BOARD_URL, USERS_URL, GAMES_URL } from \"../constants\";\n\nexport const getLeaderBoardByWins = async () => {\n  try {\n    const response = await fetch(\n      `${LEADER_BOARD_URL}?_sort=wins&_limit=10&_order=desc`\n    );\n    if (response.ok) {\n      const responseJson = await response.json();\n      return responseJson;\n    }\n  } catch (error) {\n    console.error(\"Getting leader board by wins failed: \", error);\n    return null;\n  }\n};\n\nexport const getLeaderBoardByAvgScore = async () => {\n  try {\n    const response = await fetch(\n      `${LEADER_BOARD_URL}?_sort=averageScore&_limit=10&_order=desc`\n    );\n    if (response.ok) {\n      const responseJson = await response.json();\n      return responseJson;\n    }\n  } catch (error) {\n    console.error(\"Getting leader board by average score failed: \", error);\n    return null;\n  }\n};\n\nexport const getUserById = async (userId) => {\n  try {\n    const response = await fetch(`${USERS_URL}/${userId}`);\n    if (response.ok) {\n      const responseJson = await response.json();\n      return responseJson;\n    }\n  } catch (error) {\n    console.error(\"Getting user failed: \", error);\n    return null;\n  }\n};\n\nexport const updateUser = async (userId, name, username, email) => {\n  try {\n    const response = await fetch(`${USERS_URL}/${userId}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name, username, email }),\n    });\n    if (response.ok) return true;\n    else throw new Error(\"Updating user failed.\");\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n\nexport const getBestGame = async (playerId, score) => {\n  try {\n    let response;\n    let responseJson;\n    response = await fetch(\n      `${GAMES_URL}?scores.0.memberId=${playerId}&scores.0.score=${score}`\n    );\n    if (response.ok) responseJson = await response.json();\n    if (!responseJson.length) {\n      response = await fetch(\n        `${GAMES_URL}?scores.1.memberId=${playerId}&scores.1.score=${score}`\n      );\n      if (response.ok) responseJson = await response.json();\n    }\n    if (!responseJson.length) throw new Error(\"Game not found.\");\n    if (responseJson.length === 1) return responseJson[0];\n    return responseJson.find(\n      (game) =>\n        game.scores.findIndex(\n          (sc) => sc.memberId === playerId && sc.score === score\n        ) > -1\n    );\n  } catch (error) {\n    console.error(\"Getting best game failed: \", error);\n    return null;\n  }\n};\n\nexport const getGamesWonByUser = async (playerId, gameIndex) => {\n  try {\n    const response = await fetch(\n      `${GAMES_URL}?winnerId=${playerId}&_page=${gameIndex}&_limit=1`\n    );\n    if (response.ok) {\n      const responseJson = await response.json();\n      return {\n        game: responseJson[0],\n        lastIndex: response.headers.get(\"X-Total-Count\"),\n      };\n    }\n  } catch (error) {\n    console.error(\"Getting games won by user failed: \", error);\n    return null;\n  }\n};\n","import {\n  SAVE_USERS_BY_WINS,\n  SAVE_USERS_BY_SCORE,\n  SAVE_USER,\n  CLEAR_USER,\n  SET_SHOULD_LOAD_USERS,\n  SET_ACTIVE_TAB,\n  SET_GAME_INDEX,\n  SET_LAST_INDEX,\n  SET_GAME,\n  RESET_WON_GAME,\n  SET_IS_LOADING,\n} from \"./constants\";\n\nexport function saveUsersByWins(users) {\n  return (dispatch) => {\n    dispatch({\n      type: SAVE_USERS_BY_WINS,\n      payload: { users },\n    });\n  };\n}\n\nexport function saveUsersByScore(users) {\n  return (dispatch) => {\n    dispatch({\n      type: SAVE_USERS_BY_SCORE,\n      payload: { users },\n    });\n  };\n}\n\nexport function saveUser(user) {\n  return (dispatch) => {\n    dispatch({\n      type: SAVE_USER,\n      payload: { user },\n    });\n  };\n}\n\nexport function clearUser() {\n  return (dispatch) => {\n    dispatch({\n      type: CLEAR_USER,\n    });\n  };\n}\n\nexport function setShouldLoadUsers(isUpdated) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_SHOULD_LOAD_USERS,\n      payload: isUpdated,\n    });\n  };\n}\n\nexport function setActiveTab(activeTab) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_ACTIVE_TAB,\n      payload: { activeTab },\n    });\n  };\n}\n\nexport function setGameIndex(gameIndex) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_GAME_INDEX,\n      payload: { gameIndex },\n    });\n  };\n}\n\nexport function setLastIndex(lastIndex) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_LAST_INDEX,\n      payload: { lastIndex },\n    });\n  };\n}\n\nexport function setGame(game) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_GAME,\n      payload: { game },\n    });\n  };\n}\n\nexport function resetWonGame() {\n  return (dispatch) => {\n    dispatch({\n      type: RESET_WON_GAME,\n    });\n  };\n}\n\nexport function setIsLoading(key, isLoading) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_IS_LOADING,\n      payload: {\n        key,\n        isLoading,\n      },\n    });\n  };\n}\n","\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport UserItem from './components/UserItem';\nimport Tab from './components/Tab';\nimport Spinner from './components/Spinner';\nimport { getBestGame, getUserById } from '../api/fetch';\nimport { setActiveTab, saveUser } from '../actions';\nimport { MOST_WINS_TAB, AVG_SCORE_TAB, USERS_BY_WINS, USERS_BY_SCORE } from '../constants';\nimport './LeaderBoard.css';\n\nconst LeaderBoard = ({ users, activeTab, setActiveTab, saveUser, isLoading }) => {\n  const saveUserWithGameDetails =  async (user) => {\n    const { userId, highestScore: { against, score } } = user;\n    const bestGameResponse =  await getBestGame(userId, score);\n    if (!bestGameResponse) return;\n    const opponent = await getUserById(against);\n    if (opponent) {\n      const bestGame = {\n        opponentName: opponent.name, \n        opponentId: opponent.id, \n        won: bestGameResponse.winnerId === userId, \n        score, \n        date: bestGameResponse.createdAt\n      };\n      saveUser({ ...user, bestGame })\n    }\n  }\n\n  const switchTab = (tab) => {\n    if (tab !== activeTab) setActiveTab(tab);\n  }\n\n  const renderLoader = () => <Spinner />\n\n  const renderLeaderBoard = () => users.map(user => \n    <UserItem \n      key={user.userId} \n      name={user.name}\n      wins={user.wins}\n      averageScore={user.averageScore}\n      losses={user.losses}\n      onClick={() => saveUserWithGameDetails(user)} />\n  )\n\n  const renderErrorMessage = () => <div className='leader-board-error'>Players could not be loaded, please try again later.</div>\n\n  const renderUsersSection = () => {\n    if (users?.length) return renderLeaderBoard();\n    return renderErrorMessage();\n  }\n\n  return (\n    <div className='leader-board-wrap'>\n        <div className='leader-board-tabs'>\n          <Tab isActive={activeTab === MOST_WINS_TAB} onClick={() => switchTab(MOST_WINS_TAB)} text='Most wins' />\n          <Tab isActive={activeTab === AVG_SCORE_TAB} onClick={() => switchTab(AVG_SCORE_TAB)} text='Average score' />\n        </div>\n        <div className='leader-board-users-list'>\n          {isLoading ? renderLoader() : renderUsersSection()}\n        </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const activeTab = state.activeTab;\n  const isLoading =  state.activeTab === MOST_WINS_TAB ? state.isLoading[USERS_BY_WINS] : state.isLoading[USERS_BY_SCORE];\n  const users = state.activeTab === MOST_WINS_TAB ? state.usersByWins : state.usersByScore;\n  return {\n    activeTab,\n    isLoading,\n    users,\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveTab,\n  saveUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeaderBoard);\n","\n\nimport React, { useState, useEffect } from 'react';\nimport './TextField.css';\n\nconst TextField = ({ id, isEditing, originalValue, handleChange, customClass }) => {\n  const [ value, setValue ] = useState(originalValue);\n  const [ isValid, setIsValid ] = useState(true);\n\n  useEffect(() => {\n    if (!isEditing) {\n      setValue(originalValue);\n      setIsValid(true);\n    }\n  }, [isEditing, originalValue]);\n\n  const handleInputChange = (event) => {\n    setValue(event.target.value)\n    handleChange(event.target.value, isValid);\n    setIsValid(!!event.target.value);\n  }\n\n  return (\n    isEditing ? (\n      <input \n        type='text'\n        name={id}\n        value={value}\n        onChange={handleInputChange}  \n        className={`text-field ${!isValid ? 'invalid-input' : ''}`}\n      /> \n    ) : <div className={customClass}>{value}</div>\n  )\n}\n\nexport default TextField;\n","import React from 'react';\n\nconst Button = ({ text, onClick, customClass, disabled }) => (\n  <button \n    className={customClass || ''}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {text}\n  </button>\n)\n\nexport default Button;","\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport TextField from './TextField';\nimport Button from './Button';\nimport { updateUser } from '../../api/fetch';\nimport { setShouldLoadUsers } from '../../actions';\nimport './UserDetailsSection.css';\n\nconst UserDetailsSection = ({ userId, nameFromState, userNameFromState, emailFromState, setShouldLoadUsers }) => {\n  const [ isEditing, setIsEditing ] = useState(null);\n  const [ name, setName ] = useState(nameFromState);\n  const [ username, setUsername ] = useState(userNameFromState);\n  const [ email, setEmail ] = useState(emailFromState);\n  const [ isFormValid, setIsFormValid ] = useState(true);\n  let checkFormValidity;\n\n  useEffect(() => {\n    setIsFormValid(checkFormValidity());\n  }, [name, username, email, checkFormValidity]);\n\n  const editForm = () => setIsEditing(true);\n  checkFormValidity = () => name && username && email;\n\n  const saveForm = async () => {\n    if (nameFromState !== name || userNameFromState !== username || emailFromState !== email) {\n      const updated = await updateUser(userId, name, username, email);\n      if (updated) {\n        setShouldLoadUsers(true);\n      } else {\n        resetFields();\n      }\n    }\n    setIsEditing(false);\n  }\n\n  const cancelEditing = () => { \n    resetFields();\n    setIsEditing(false);\n  }\n\n  const resetFields = () => {\n    setName(nameFromState);\n    setUsername(userNameFromState);\n    setEmail(emailFromState);\n  }\n\n  const renderFields = () => {\n    return (\n      <div className='text-field-wrap'>\n        <TextField customClass='title-field' id='name' originalValue={name} isEditing={isEditing} handleChange={setName} />\n        <TextField customClass='subtitle-field' id='username' originalValue={username} isEditing={isEditing} handleChange={setUsername} />\n        <TextField customClass='subtitle-field' id='email' originalValue={email} isEditing={isEditing} handleChange={setEmail} />\n      </div>\n    )\n  }\n\n  const renderButtons = () => {\n    if (isEditing) {\n      return (\n        <>\n          <Button text='Save' onClick={saveForm} customClass='form-btn' disabled={!isFormValid}/>\n          <Button text='Cancel' onClick={cancelEditing} customClass='form-btn'/>\n        </>\n      ) \n    }\n    return <Button text='Edit details' onClick={editForm} customClass='edit-btn'/>\n  }\n\n  return (\n    <div className='user-details-section-wrap'>\n      {renderFields()}\n      {renderButtons()}\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  const { userId, name, username, email } = state.user;\n  return { userId, nameFromState: name, userNameFromState: username, emailFromState: email };\n};\n\nconst mapDispatchToProps = {\n  setShouldLoadUsers\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetailsSection);\n","import React from 'react';\nimport './HighestScoreSection.css';\n\nconst HighestScoreSection = ({ name, won, score, opponent, date }) => (\n  <div className='highest-score-wrap'>\n    <div className='highest-score-subtitle'>Highest score</div>\n    <div>\n      <b>{name}</b> {won ? 'won' : 'lost'} with <b>{score} points</b> against <b>{opponent}</b> { date && `on ${date}`}\n    </div>\n  </div>\n)\n\nexport default HighestScoreSection;","import React from 'react';\nimport Button from './Button';\nimport { PREV, NEXT } from '../../constants';\nimport './WonGamesSection.css';\n\nconst WonGamesSection = ({ name, game, fetchGameWonByUser, gameIndex, lastIndex }) => {\n  const { opponentName, playerScore, opponentScore, date } = game;\n\n  const renderWonGameText = () => (\n    <div className='won-games-text'>\n      {name} vs. {opponentName} ({playerScore} : {opponentScore}) {date && `on ${new Date(date).toLocaleString()}`}\n    </div>\n  )\n\n  return (\n    <>\n      <div className='won-games-title'>Won games</div>\n      <div className='won-games-wrap'>\n        <div className={gameIndex > 1 ? '' : 'button-hidden'}>\n          <Button onClick={() => fetchGameWonByUser(PREV)} text='<'/>\n        </div>\n        {game && renderWonGameText()}\n        <div className={gameIndex < lastIndex ? '' : 'button-hidden'}>\n          <Button onClick={() => fetchGameWonByUser(NEXT)} text='>'/>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default WonGamesSection;\n","import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { getGamesWonByUser, getUserById } from \"../api/fetch\";\nimport UserDetailsSection from './components/UserDetailsSection';\nimport UserStats from '../components/UserStats';\nimport HighestScoreSection from './components/HighestScoreSection';\nimport WonGamesSection from './components/WonGamesSection';\nimport Button from './components/Button';\nimport { PREV } from '../constants';\nimport { setGame, setGameIndex, setLastIndex } from '../actions';\nimport './UserPopup.css';\n\nconst UserPopup = ({ hideUserDetail, user, game, gameIndex, lastIndex, setGame, setGameIndex, setLastIndex }) => {\n  const { userId, name, username, email, averageScore, wins, losses, bestGame: { opponentName, date, score, won } } = user;\n  let fetchGameWonByUser;\n\n  useEffect(() => {\n    const fetchWonGame = async () => await fetchGameWonByUser();\n    if (wins) fetchWonGame();\n  }, [fetchGameWonByUser, wins]);\n\n  fetchGameWonByUser = async (direction) => {\n    let nextIndex = gameIndex;\n    if (!direction) setLastIndex(wins < 5 ? wins : 5);\n    if (direction) {\n      nextIndex = direction === PREV ? gameIndex - 1 : gameIndex + 1;\n      setGameIndex(nextIndex)\n    }\n    let response = await getGamesWonByUser(userId, nextIndex);\n    if (response) {\n      const opponentId = response.game.scores.find(score => score.memberId !== userId).memberId;\n      if (opponentId) {\n        const opponent = await getUserById(opponentId);\n        if (opponentName) {\n          const date = response.game.createdAt || '';\n          const playerScore = response.game.scores.find(score => score.memberId === userId)?.score;\n          const opponentScore = response.game.scores.find(score => score.memberId === opponentId)?.score;\n          const newGame = { opponentName: opponent.name || '', date, playerScore, opponentScore }\n          setGame(newGame);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className='user-popup-wrap'>\n      <div className='user-popup-overlay' onClick={hideUserDetail} role='button'/>\n          <div className='user-popup'>\n          <UserDetailsSection name={name} username={username} email={email} />\n          <UserStats wins={wins} averageScore={averageScore} losses={losses} customClass='user-popup-stats'/>\n          <HighestScoreSection name={name} won={won} score={score} opponent={opponentName} date={date ? new Date(date).toLocaleString() : ''}/>\n          {game && ( \n            <WonGamesSection \n              userId={userId}\n              name={name}\n              game={game}\n              fetchGameWonByUser={fetchGameWonByUser}\n              gameIndex={gameIndex}\n              lastIndex={lastIndex}/>\n          )}\n          <Button text='✕' onClick={hideUserDetail} customClass='user-popup-close-btn'/>\n        </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const user = state.user;\n  const { game, gameIndex, lastIndex } = state.wonGame;\n  return {\n    user, \n    game, \n    gameIndex, \n    lastIndex\n  };\n};\n\nconst mapDispatchToProps = {\n  setGame,\n  setGameIndex,\n  setLastIndex\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPopup);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport LeaderBoard from \"./leaderboard/LeaderBoard\";\nimport UserPopup from \"./user-popup/UserPopup\";\nimport {\n  getLeaderBoardByAvgScore,\n  getLeaderBoardByWins,\n  getUserById,\n} from \"./api/fetch\";\nimport {\n  saveUsersByWins,\n  saveUsersByScore,\n  clearUser,\n  resetWonGame,\n  setShouldLoadUsers,\n  setIsLoading,\n} from \"./actions\";\nimport \"./App.css\";\nimport { USERS_BY_WINS, USERS_BY_SCORE } from \"./constants\";\n\nconst App = ({\n  saveUsersByWins,\n  saveUsersByScore,\n  clearUser,\n  resetWonGame,\n  setShouldLoadUsers,\n  detailShown,\n  shouldLoadUsers,\n  setIsLoading,\n}) => {\n  let loadUsersByWins;\n  let loadUsersByScore;\n\n  useEffect(() => {\n    const fetchLeaderBoard = async () => {\n      await loadUsersByWins();\n      setIsLoading(USERS_BY_WINS, false);\n      await loadUsersByScore();\n      setIsLoading(USERS_BY_SCORE, false);\n    };\n    setShouldLoadUsers(false);\n    if (shouldLoadUsers) {\n      setIsLoading(USERS_BY_WINS, true);\n      setIsLoading(USERS_BY_SCORE, true);\n      fetchLeaderBoard();\n    }\n  }, [\n    shouldLoadUsers,\n    loadUsersByWins,\n    loadUsersByScore,\n    setShouldLoadUsers,\n    setIsLoading,\n  ]);\n\n  loadUsersByWins = async () => {\n    const usersByWins = await getLeaderBoardByWins();\n    if (!usersByWins) {\n      saveUsersByWins(usersByWins);\n      return;\n    }\n    let updatedUsers = [];\n    for (let user of usersByWins) {\n      const updatedUser = await getUserDetails(user);\n      if (updatedUser) updatedUsers.push(updatedUser);\n    }\n    saveUsersByWins(updatedUsers);\n  };\n\n  loadUsersByScore = async () => {\n    const usersByScore = await getLeaderBoardByAvgScore();\n    if (!usersByScore) {\n      saveUsersByScore(usersByScore);\n      return;\n    }\n    let updatedUsers = [];\n    for (let user of usersByScore) {\n      const updatedUser = await getUserDetails(user);\n      if (updatedUser) updatedUsers.push(updatedUser);\n    }\n    saveUsersByScore(updatedUsers);\n  };\n\n  const getUserDetails = async (user) => {\n    const userDetails = await getUserById(user.userId);\n    if (userDetails) {\n      const userWithDetails = { ...user, ...userDetails };\n      return userWithDetails;\n    }\n    return null;\n  };\n\n  const hideUserDetail = () => {\n    clearUser();\n    resetWonGame();\n  };\n\n  return (\n    <div className={`app ${detailShown ? \"no-scroll\" : \"\"}`}>\n      <LeaderBoard />\n      {detailShown && <UserPopup hideUserDetail={hideUserDetail} />}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const detailShown = !!state.user;\n  const shouldLoadUsers = state.shouldLoadUsers;\n  return {\n    detailShown,\n    shouldLoadUsers,\n  };\n};\n\nconst mapDispatchToProps = {\n  saveUsersByWins,\n  saveUsersByScore,\n  clearUser,\n  resetWonGame,\n  setShouldLoadUsers,\n  setIsLoading,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}